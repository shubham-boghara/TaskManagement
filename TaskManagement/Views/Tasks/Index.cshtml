@model TaskManagement.Dtos.CreateTasksDto
@{
    ViewData["Title"] = "Index";
}

<div class="row">
    <div class = "col-md-6">
        <div class="card">
            <div class="card-header">
                Create Task
            </div>
            <div class="card-body">
                <form id="taskForm" method="post" novalidate>
    <div class="form-group">
        <label for="Title">Title</label>
        <input asp-for="Title" class="form-control" />
        <span asp-validation-for="Title" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label for="Description">Description</label>
        <textarea asp-for="Description" class="form-control"></textarea>
        <span asp-validation-for="Description" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label for="Status">Status</label>
        <input asp-for="Status" class="form-control" />
        <span asp-validation-for="Status" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label for="DueDate">Due Date</label>
        <input asp-for="DueDate" class="form-control" type="date" />
        <span asp-validation-for="DueDate" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label for="PriorityId">Priority</label>
        <select asp-for="PriorityId" class="form-control">
            @* <option value="2">Low</option>
            <option value="3">Medium</option>
            <option value="4">High</option> *@
        </select>
        <span asp-validation-for="PriorityId" class="text-danger"></span>
    </div>

    <button type="submit" class="btn btn-sm mt-1 btn-primary">Create Task</button>
</form>
            </div>
        </div>
    </div>
</div>




@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script>
        $(document).ready(function () {
            $("#taskForm").submit(function(e){
                e.preventDefault();
                createTask();
            });

            selectionTaskPriority();
        });


        function createTask() {
            debugger;
            var obj = {
                Title: $("#Title").val(),
                Description: $("#Description").val(),
                Status: $("#Status").val(),
                DueDate: $("#DueDate").val() ? new Date($("#DueDate").val()).toISOString() : null,
                PriorityId: $("#PriorityId").val()

            }

            ajaxCrud('POST', '/api/Tasks', obj, function (response) {
                if (response.success) {
                    window.location.href = "/Tasks/Details/" + response.data.TaskId;
                }
                //$('#').DataTable().ajax.reload(); // Reload DataTable after saving
               
            }, function (xhr, status, error) {
                
            });
        }

        function selectionTaskPriority() {

            ajaxCrud('GET', '/api/tasks/taskpriority', null, function (response) {
                if (response.success) {

                    let data = response['data'];

                    let str = ``;
                    for (let i = 0; i < data.length; i++) {
                        let o = data[i];
                        str += `<option value='${o['PriorityId']}'>${o['Name']}</option>`;
                    }
                    $("#PriorityId").html(str);

                    
                }

            }, function (xhr, status, error) {

            });
        }

   </script>
    
}